<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Build a personal Download Center]]></title>
    <url>%2F2019%2F01%2F28%2Fsetup-pyone%2F</url>
    <content type="text"><![CDATA[前言 onedrive现在可以用教育邮箱免费嫖永久1TB除开其他不说，onedrive的同步/下载功能还是挺不错的pyone是一个大佬开发的基于Python-Flask的onedrive文件本地化浏览系统@Abbey结合云服务器和自定义域名就可以做一个自己的下载站了！ 参考文档https://wiki.pyone.me/https://media.weibo.cn/article?jumpfrom=weibocom&amp;id=2309404332460509925014&amp;display=0&amp;retcode=6102 准备 云服务器（centos）x1 域名（download.xxxx.cn）x1 onedrive账号 x1 申请一个onedrive根据微博大佬@倒吸一口凉屁的教程随机生成一个fake邮箱，步骤简单易懂 服务器安装宝塔面板在宝塔主页用SSH连接云主机输入yum install -y wget &amp;&amp; wget -O install.sh自动安装宝塔面板 安装完成后，浏览器打开http://ip:8888登录后台，用户密码前面会自动生成，请记得及时修改 安装Pyone所有步骤参考PyoneWiKi完成之后，打开http://ip:34567即可进入后台 PS:这里我使用一键安装脚本出现了问题，有一个依赖包没有安装导致我排错了很久，建议手动输入pip install -r requirements.txt一次 绑定网盘获取应用机密（client_secret)和应用ID（client_id)详情参考PyoneWiKi 绑定域名在宝塔面板里新建你的网站目录，设置里添加反向代理，并修改nginx配置文件详情参考PyoneWiKi 添加SSL证书1.在腾讯云上申请一个你的下载站域名证书，或者去FreeSSL申请一个免费证书 2.进入宝塔面板后台，打开你的网站，找到SSL-其他证书输入你的证书和密钥，保存即可，记得勾选强制HTTPS 其他绑定多网盘和其他错误信息请参考PyoneWiKi如果所有步骤均无误，浏览器输入https://yourdomian即可访问 下载&amp;在线播放测试使用idm随意下载一个文件，可见在100M网络下，速度已经很不错了 随便传了一集美剧，在线播放加载也挺快]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>onedrive</tag>
        <tag>下载</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Use Powershell Force Delete AzureAD Users]]></title>
    <url>%2F2019%2F01%2F25%2Fpowershell-forcedel-aadusers%2F</url>
    <content type="text"><![CDATA[前言 最近一直鼓捣ADFS服务器，各种虚拟机装了又删国际版国内版订阅也是换着花样的各种Dirsync导致我的国际版订阅上同步了一堆乱七八糟的用户这次要有其他用处了发现删除目录时提示自定义域名在使用中找了下文档，用powershell删除用户发现特别简单 参考文档https://docs.microsoft.com/en-us/office365/enterprise/turn-off-directory-synchronizationhttps://docs.microsoft.com/zh-cn/office365/enterprise/powershell/connect-to-office-365-powershellhttps://blogs.technet.microsoft.com/jeffgilb/2017/03/09/deleting-azure-active-directory/ 安装MSOnline模块打开powershell，输入Install-Module MSOnline弹出来的提示框中输入两次Y等待两分钟安装完成即可 连接到Azure云powershell中输入Connect-MsolService注意：这里因为是国际版环境，所以后面不用接参数，假如是国内版或者其他版本需要后面接上参数，如下图 在弹出来的对话框中输入你的管理员账号和密码即可 停止DirSync同步powershell中输入Set-MsolDirSyncEnabled -EnableDirSync $false弹出来的提示框中输入Y登录portal可看到AAD connect中同步已经显示停止 删除AAD用户powershell中输入Get-MsolUser | Export-CSV C:\users.csv将AAD用户导出到本地为csv文档 Import-CSV C:\users.csv | Remove-MsOlUser –Force使用force参数强制删除用户即可 登录portal可看到除了管理员用户之外的所有AAD用户均被删除]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>Microsoft</tag>
        <tag>powershell</tag>
        <tag>AAD</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AD FS文档文档整理]]></title>
    <url>%2F2019%2F01%2F23%2FAD-FS%E6%96%87%E6%A1%A3%E6%96%87%E6%A1%A3%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[前言 去年年底在实验环境下做的结合国内和国际版Azure并不算成功总是卡在某一个会出问题这次经过长久的实验和总结终于成功的实现了和两个版本的azure的单点登录 实验环境4台虚拟机，均为windows server 2019 datacenter版本一个公网认证的通配符证书（*.tediorelee.cn.pfx一个个人域名（tediorelee.cn 服务器结构 安装步骤1.首先两台作为DC的服务器修改名字，安装ad域功能，两台服务器组成AD forest（tediorelee.cn）2.在AD域用户和计算机里，新建一个部门，新建一个用户，两台服务器同步即可3.在两台DC上安装AAD connect工具，分别与国内版和国际版azure同步，安装选项详见以前文档4.登录chinacloud和global的azure，看到aad用户里同步成功即可5.在adfs服务器上，加入域（ps：adfs服务器不要安装在DC上）修改计算机名6.adfs上添加ad联合身份认证服务功能，导入我们的域名通配符证书，详情配置参照旧文档7.在DC-Global上，运行aad connect，选择“更改用户登录”，用户登录方式选择“使用AD FS进行联合身份认证”，后面跟着配置即可8.在aad connect工具中，选择“管理联合身份认证服务”-“更新AD FS ssl证书“，导入你的通配符证书并更新9.在aad connect工具中，选择“管理联合身份认证服务”-“联合AzureAD 域”，配置你的adfs和aad域10.在adfs服务器上，打开ADFS 管理，检查是否添加成功信赖方信任，如图：11.在DC-Chinacloud上，步骤同上，联合国内版aad域，但是这时会报个错，无法使用aad connect工具自动添加国内版的信赖方信任，故在ADFS管理中手动添加（具体配置参照tab《ADFS安装相关》） 截图展示登录国际版azure在登录框中输入你的域账号跳转到AD FS 服务器认证输入你的域账号账号和密码成功登录国际版Azure 登录国内版azure同样输入你的域账号和密码跳转到AD FS服务器认证由于之前已经通过了单点登录的认证，这里直接进入。成功登录国内版Azure]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>microsoft</tag>
        <tag>adfs</tag>
        <tag>IT Support</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[接下来如何]]></title>
    <url>%2F2019%2F01%2F15%2F%E6%8E%A5%E4%B8%8B%E6%9D%A5%E5%A6%82%E4%BD%95%2F</url>
    <content type="text"><![CDATA[2019年1月15日你已经听了《接下来如何》144遍了 🎵🎵🎵🎵🎵🎵🎵🎵🎵 未来没人能够预测被谁喜欢 又喜欢谁呢 而下一步决定的那一瞬转成怎样的天色 以为从此就不会爱了黑色 我关上了灯 当自己是无情绪的毛衣谁冷 就给谁了 非得等到自己也开始感觉累了累了 却忘了出口是哪扇门谁能教我该如何变残忍残忍 却是开始那刻说得还不够狠爱我的人我总是舍不得舍不得看他痛着 怎么说出否认我爱的人我变得要不得要不得我爱的人 刻意地制造一些些安稳却成弄坏的雕刻 怎知道木偶有天变成人学会怎么爱了 想回到原本的单纯白色 是自己弄脏的 下一场大雨掉一身灰尘重新 变透明了 非得等到自己开始讨厌自己了才懂得怎么诚实面对自己想要的是不该就这样被原谅了说真的谁都曾为自己做出自私的选择爱我的人我还是舍不得舍不得看他痛着即使被爱得疲倦了我爱的人却变得爱不得爱不得 要怎么说出我爱上你了 爱不得 要不得 爱不得]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>life</tag>
        <tag>music</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ADFS填坑-整合国内版和国际版Azure]]></title>
    <url>%2F2019%2F01%2F14%2Fadfs-azure%2F</url>
    <content type="text"><![CDATA[前言 上一篇文章中我们做到了使用AAD Connect把本地用户和Azure连接起来但是众所周知国内版和国际版的Azure是单独隔离的所以这次我们将使用另一个单独的服务器，加入到同一个域，组成林一个林下的两个AD服务器会相互同步，然后两个服务器单独与国内版和国际版的Azure同步，以做到整合国内版和国际版的目的 准备工作新建一个用来作为同步国际版AD的服务器，我们取名叫AD2将AD2的dns指向域控的ip，把AD2加入域（tediorelee.cn） AD2上安装Active Directory角色和功能配置步骤这里省略 登录国际版Azure使用自己的账号并创建一个新的AAD目录这里我起名为azure_test 新建一个用户mysql@lovezq4ever.onmicrosoft.com(注意域名规范)并授予该用户全局管理员权限 然后下载AAD Connect工具，安装完成后准备开始配置同理选择自定义配置，其余默认下一步在连接到Azure AD这里输入刚才创建的全局管理员账号以及密码（这里是mysql@lovezq4ever.onmicrosoft.com） 连接目录这里点击添加目录，输入你的DC账户及密码选中下拉菜单中的现有林 在域和OU筛选这里点击下拉箭头，只勾选你想要同步的目录即可（注意这里要与国内版的保持一致否则会出问题） 其余默认设置即可，等待配置完成 可以看到已经配置完成 验证是否整合成功登录国际版azure在用户中我们可以看到已经同步过来的ADFS服务器中的用户mangolee 验证用本地AD用户mangolee登录Azure是否会跳转到ADFS服务器： 登录Azure输入用户名mangolee@tediorelee.cn和密码可以看到这里显示跳转到组织登录页（即ADFS服务器） 输入域中的用户名和账户即可登录]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>microsoft</tag>
        <tag>ADFS</tag>
        <tag>域</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ADFS填坑-Connect ADFS to Azure Active Directory]]></title>
    <url>%2F2019%2F01%2F14%2Fadfs-aad%2F</url>
    <content type="text"><![CDATA[前言 国内版的azure目前可以一元试用，适合个人测试用途，我这里自行注册了一个账号，将用这个账号测试我们整合aad和adfs的正确性 参考资料：http://blog.51cto.com/gaowenlong/1920117http://blog.51cto.com/gshao/1788027https://support.microsoft.com/en-us/help/3061192/step-by-step-video-set-up-adfs-for-office-365-for-single-sign-on 打开网址azure登录你的账号 dashboard中找到AAD 找到AAD Connect，下载官方的同步工具 安装软件，一路下一步，选择自定义配置(因为我自己已经配好了，借用网上博客的图原文链接) 输入你的azure账号密码（图上请自行替换） 连接目录这里同理 用户主题名称勾选userPrincipalName 选择要同步的OU这里我只用选择Users（视情况而定） 一路下一步ADFS场选择现有的 输入域管理员凭据 一路下一步，等待配置完成即可登录azure，在AAD用户里即可看到同步上来的用户了PS：这里我自己AD用户里面新建了一个test组并新建了一个user名为mangolee，具体视情况而定 测试登录，登录azure，用我们测试用的mangolee账号登录 可以看到这里自动跳转到adfs认证]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>microsoft</tag>
        <tag>ADFS</tag>
        <tag>域</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ADFS填坑-配置ADFS_2]]></title>
    <url>%2F2019%2F01%2F14%2FADFS%E5%A1%AB%E5%9D%91-%E9%85%8D%E7%BD%AEADFS-2%2F</url>
    <content type="text"><![CDATA[前言 紧接上一步我们已经成功的导入了证书点击配置adfs服务注意我们是创建第一个联合服务器 参考资料：http://blog.51cto.com/gaowenlong/1920117http://blog.51cto.com/gshao/1788027https://support.microsoft.com/en-us/help/3061192/step-by-step-video-set-up-adfs-for-office-365-for-single-sign-on 注意证书这里选择我们刚才申请的第三方证书 这里提示密钥，我们打开powershell键入命令12345678910111213141516171819202122232425262728293031323334353637383940Add-KdsRootKey -EffectiveTime ((get-date).addhours(-10))``` ![alt](https://tedioreleeblog.pek3b.qingstor.com/adfs2/Snipaste_2018-11-22_13-34-47.png)![alt](https://tedioreleeblog.pek3b.qingstor.com/adfs2/Snipaste_2018-11-22_13-35-22.png)选择管理员账户并输入密码![alt](https://tedioreleeblog.pek3b.qingstor.com/adfs2/Snipaste_2018-11-22_13-35-44.png)数据库选择使用windows内部数据库即可![alt](https://tedioreleeblog.pek3b.qingstor.com/adfs2/Snipaste_2018-11-22_13-38-46.png)先决条件检查完成。等待配置即可![alt](https://tedioreleeblog.pek3b.qingstor.com/adfs2/Snipaste_2018-11-22_13-39-17.png)打开dns配置在正向查找区域中右键新建区域![alt](https://tedioreleeblog.pek3b.qingstor.com/adfs3/Snipaste_2018-11-22_23-25-52.png)选择主要区域其余默认![alt](https://tedioreleeblog.pek3b.qingstor.com/adfs3/Snipaste_2018-11-22_23-26-22.png)输入你的FQDN，保存即可![alt](https://tedioreleeblog.pek3b.qingstor.com/adfs3/Snipaste_2018-11-22_23-26-42.png)在刚才添加的地址上面右键新建A记录IP地址指向ADFS服务器的IP![alt](https://tedioreleeblog.pek3b.qingstor.com/adfs3/Snipaste_2018-11-22_23-30-42.png)测试登录浏览器输入 https://adfs.tediorelee.cn/adfs/ls/IdpInitiatedSignon.aspx123注意这里因为非windows server 2012所以默认IdpInitiatedSignon没有开启打开powershell输入以下命令 Set-AdfsProperties -EnableIdPInitiatedSignonPage:$true Set-AdfsProperties -EnableRelayStateForIdpInitiatedSignOn:$true`]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>microsoft</tag>
        <tag>ADFS</tag>
        <tag>域</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ADFS填坑-配置ADFS_1]]></title>
    <url>%2F2019%2F01%2F14%2FADFS%E5%A1%AB%E5%9D%91-%E9%85%8D%E7%BD%AEADFS-1%2F</url>
    <content type="text"><![CDATA[前言 我们上几个步骤里已经搭好了DC和CA的环境，接下来就可以安装adfs功能了 参考资料：http://blog.51cto.com/gaowenlong/1920117http://blog.51cto.com/gshao/1788027https://support.microsoft.com/en-us/help/3061192/step-by-step-video-set-up-adfs-for-office-365-for-single-sign-on 找到添加角色和功能，安装active directory 联合身份认证服务 下一步默认安装，等待安装完成 请求公网证书安装完成以后，我们打开证书服务，给adfs请求一个公网SSL证书win+r打开certlm.msc点击个人-证书 空白处右键，所有任务-高级操作-创建自定义请求选中不使用注册策略继续 模板选择旧密钥 点开详细信息的小箭头点击属性 如图所示，写上友好名称和描述 使用者里，添加国家，公用名和单位信息 私钥里点击第一个下拉箭头，去掉默认勾选勾上最后一个（如图所示） 密钥选项里修改大小为2048并使其可导出 保存请求文件 在第三方证书颁发机构申请一个证书这里我用的是freessl 选择我有CSR复制刚才创建的CSR进去点击创建 DNS验证，把提供的TXT记录值写进你的域名解析里（这里略过） 验证完成后，下载证书并复制到服务器在个人-证书下右键，所有任务-导入根据向导导入刚才的证书文件]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>microsoft</tag>
        <tag>ADFS</tag>
        <tag>域</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ADFS填坑坑-开启证书服务器功能]]></title>
    <url>%2F2019%2F01%2F14%2Fadfs-cert%2F</url>
    <content type="text"><![CDATA[参考资料：http://blog.51cto.com/gaowenlong/1920117http://blog.51cto.com/gshao/1788027https://support.microsoft.com/en-us/help/3061192/step-by-step-video-set-up-adfs-for-office-365-for-single-sign-on 前言在服务器上开启证书服务点击添加角色和功能找到active directory证书服务 一路下一步，在选择服务和角色选项这里勾选如图所示 下一步直到开始安装，勾选如果需要，自动重启 重启完成以后，点击配置证书服务 一路默认，这里勾选刚才安装的三个服务 一路默认，选择证书并稍后为SSL分配 win+R运行certlm.msc即可看到证书服务已安装完成]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>microsoft</tag>
        <tag>ADFS</tag>
        <tag>域</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ADFS填坑-搭建CA服务器]]></title>
    <url>%2F2019%2F01%2F14%2Fadfs-ca%2F</url>
    <content type="text"><![CDATA[参考资料：http://blog.51cto.com/gaowenlong/1920117http://blog.51cto.com/gshao/1788027https://support.microsoft.com/en-us/help/3061192/step-by-step-video-set-up-adfs-for-office-365-for-single-sign-on 所需环境一个ActiveDirectory域管理员账户SSL服务器身份验证的公共可信证书 开始安装准备一个本地vmware虚拟机作为CA服务器（从新安装），一个azure服务器作为联合认证服务器vmware虚拟机中选择添加角色和功能，安装ActiveDirectory域服务配置 设置密码 提示没有DNS，直接下一步，会自动创建 域名会自动生成，直接下一步 路径可以默认也可以自定义 后面的条件检查一路默认，等待安装即可（重启） 重启完成后，点击添加要管理的其他服务器 点击查找，选中搜索到的服务器，双击添加 在本地服务器中即可看到域]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>microsoft</tag>
        <tag>ADFS</tag>
        <tag>域</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tale开源博客框架安装]]></title>
    <url>%2F2019%2F01%2F14%2Ftale%2F</url>
    <content type="text"><![CDATA[简介 这个人呐总是不安于现状的，所以我之前尝试了hexo博客之后，又发现了一款由国人开发的开源博客名叫tale，于是就迫不及待的开始了安装、尝鲜。 tale特性 设计简洁，界面美观 Markdown 文章发布 自定义文章链接 支持多主题 支持插件扩展 支持 Emoji 表情 支持网易云音乐播放 支持附件和数据库备份 部署简单，不依赖 Tomcat 无需数据库，内嵌 Sqlite 环境准备以我自己的腾讯云为例，ubuntu16.04的操作系统先安装JDK12345sudo add-apt-repository ppa:webupd8team/javasudo apt updatesudo apt install -y oracle-java8-installersudo apt install -y oracle-java8-set-defaultjava -version 后安装nginx 1sudo apt-get install nginx -y 安装 Tale 博客修改Nginx配置vim /etc/nginx/sites-aviliable/defalut 修改为： 12345678910111213141516171819202122232425262728server &#123; listen 80; location / &#123; try_files $uri $uri/ =404; &#125;&#125;server&#123; listen 443; server_name www.tediorelee.cn,132.232.20.202; # 填写绑定证书的域名 ssl on; ssl_certificate cert/1_www.tediorelee.cn_bundle.crt; ssl_certificate_key cert/2_www.tediorelee.cn.key; ssl_session_timeout 5m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # 按照这个协议配置 ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; # 按照这个套件配置 ssl_prefer_server_ciphers on; location / &#123; proxy_pass http://127.0.0.1:9000; proxy_read_timeout 300; proxy_connect_timeout 300; proxy_redirect off; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; &#125;&#125; 注：因为我自己的域名已经申请了免费的证书所以我就直接添加到了/etc/nginx/cert目录下并在配置文件中写明了https的配置信息 启动tale123wget -qO- git.io/fxsWx | bashcd talesh tool start 访问ip:9000即可开始安装 脚本说明： start: 启动 tale stop: 停止 tale restart: 重启 tale status: 查看 tale 运行状态 log: 查看 tale 运行日志 upgrade: 升级 tale，会自动备份 效果图]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>tale</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[雷神G150T2015款Hackintosh安装]]></title>
    <url>%2F2018%2F12%2F14%2Fg150th%2F</url>
    <content type="text"><![CDATA[简 介雷神G150TH2015年款黑苹果安装记录 镜像下载：黑果小兵参考文章：国光 配置概要CPU：i7-4720HQGPU：intel（R）HD Graphics 4600SSD：team128G Kingston120G Kingston256G 工具： Transmac DiskGenius U盘x1 EFI文件备份链接: https://pan.baidu.com/s/13Vkr7CmHwIEkOPTfC5dAdg 提取码: 1qyi config.plist&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt; &lt;plist version=&quot;1.0&quot;&gt; &lt;dict&gt; &lt;key&gt;ACPI&lt;/key&gt; &lt;dict&gt; &lt;key&gt;AutoMerge&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Comment-DisabledAML&lt;/key&gt; &lt;string&gt;Disable other forms of CPU PM due to SSDT/Generate/PluginType=true&lt;/string&gt; &lt;key&gt;DSDT&lt;/key&gt; &lt;dict&gt; &lt;key&gt;DropOEM_DSM&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Fixes&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Comment-IRQ Fix&lt;/key&gt; &lt;string&gt;The following fixes may be needed for onboard audio/USB/etc&lt;/string&gt; &lt;key&gt;FixHPET&lt;/key&gt; &lt;false/&gt; &lt;key&gt;FixIPIC&lt;/key&gt; &lt;false/&gt; &lt;key&gt;FixRTC&lt;/key&gt; &lt;false/&gt; &lt;key&gt;FixTMR&lt;/key&gt; &lt;false/&gt; &lt;/dict&gt; &lt;key&gt;Patches&lt;/key&gt; &lt;array&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;change OSID to XSID (to avoid match against _OSI XOSI patch)&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; T1NJRA== &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; WFNJRA== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;change _OSI to XOSI&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; X09TSQ== &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; WE9TSQ== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;change _DSM to XDSM&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; X0RTTQ== &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; WERTTQ== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;change EC0 to EC&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; RUMwXw== &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; RUNfXw== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;change H_EC to EC&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; SF9FQw== &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; RUNfXw== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;change EHC1 to EH01&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; RUhDMQ== &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; RUgwMQ== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;change EHC2 to EH02&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; RUhDMg== &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; RUgwMg== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;change GFX0 to IGPU&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; R0ZYMA== &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; SUdQVQ== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;change PCI0.VID to IGPU #1 (Thinkpad)&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; UENJMFZJRF8= &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; UENJMElHUFU= &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;change PCI0.VID to IGPU #2 (Thinkpad)&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; VklEXwhfQURSDAAAAgA= &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; SUdQVQhfQURSDAAAAgA= &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;change B0D3 to HDAU&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; QjBEMw== &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; SERBVQ== &lt;/data&gt; &lt;/dict&gt; &lt;/array&gt; &lt;/dict&gt; &lt;key&gt;DisabledAML&lt;/key&gt; &lt;array&gt; &lt;string&gt;SSDT.aml&lt;/string&gt; &lt;string&gt;SSDT-XCPM.aml&lt;/string&gt; &lt;string&gt;SSDT-PluginType1.aml&lt;/string&gt; &lt;/array&gt; &lt;key&gt;DropTables&lt;/key&gt; &lt;array&gt; &lt;dict&gt; &lt;key&gt;Signature&lt;/key&gt; &lt;string&gt;#MCFG&lt;/string&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Signature&lt;/key&gt; &lt;string&gt;DMAR&lt;/string&gt; &lt;/dict&gt; &lt;/array&gt; &lt;key&gt;FixHeaders&lt;/key&gt; &lt;true/&gt; &lt;key&gt;SSDT&lt;/key&gt; &lt;dict&gt; &lt;key&gt;DropOem&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Generate&lt;/key&gt; &lt;dict&gt; &lt;key&gt;PluginType&lt;/key&gt; &lt;true/&gt; &lt;/dict&gt; &lt;key&gt;NoOemTableId&lt;/key&gt; &lt;false/&gt; &lt;/dict&gt; &lt;/dict&gt; &lt;key&gt;Boot&lt;/key&gt; &lt;dict&gt; &lt;key&gt;#DefaultVolume&lt;/key&gt; &lt;string&gt;LastBootedVolume&lt;/string&gt; &lt;key&gt;Arguments&lt;/key&gt; &lt;string&gt;-v dart=0 nv_disable=1 kext-dev-mode=1 debug=0x100 -alcoff&lt;/string&gt; &lt;key&gt;NeverHibernate&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Secure&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Timeout&lt;/key&gt; &lt;integer&gt;5&lt;/integer&gt; &lt;/dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;This file is for Haswell graphics that require FakeID=0x04128086&lt;/string&gt; &lt;key&gt;Devices&lt;/key&gt; &lt;dict&gt; &lt;key&gt;#AddProperties&lt;/key&gt; &lt;array&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;hda-gfx=onboard-1 for HDMI audio&lt;/string&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;IntelGFX&lt;/string&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;hda-gfx&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;data&gt; b25ib2FyZC0xAA== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;hda-gfx=onboard-1 for HDMI audio&lt;/string&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;HDA&lt;/string&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;hda-gfx&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;data&gt; b25ib2FyZC0xAA== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;layout-id=3&lt;/string&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;HDA&lt;/string&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;layout-id&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;data&gt; AwAAAA== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;HDA&lt;/string&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;PinConfigurations&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;data&gt; &lt;/data&gt; &lt;/dict&gt; &lt;/array&gt; &lt;key&gt;AddProperties&lt;/key&gt; &lt;array&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Inject &quot;name&quot; as (data)&quot;#display&quot; to disable graphics drivers on NVidia&lt;/string&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;NVidia&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;name&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;data&gt; I2Rpc3BsYXkA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Inject &quot;IOName&quot; as &quot;#display&quot; to disable graphics drivers on NVidia&lt;/string&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;NVidia&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;IOName&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;string&gt;#display&lt;/string&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Inject bogus class-code to prevent graphics drivers loading for NVidia&lt;/string&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;NVidia&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;class-code&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;data&gt; /////w== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Inject &quot;name&quot; as (data)&quot;#display&quot; to disable graphics drivers on AMD&lt;/string&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;ATI&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;name&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;data&gt; I2Rpc3BsYXkA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Inject &quot;IOName&quot; as &quot;#display&quot; to disable graphics drivers on AMD&lt;/string&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;ATI&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;IOName&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;string&gt;#display&lt;/string&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Inject bogus class-code to prevent graphics drivers loading for AMD&lt;/string&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;ATI&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;class-code&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;data&gt; /////w== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Inject bogus vendor-id to prevent graphics drivers loading for AMD&lt;/string&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;ATI&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;vendor-id&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;data&gt; //8AAA== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Inject bogus device-id to prevent graphics drivers loading for AMD&lt;/string&gt; &lt;key&gt;Device&lt;/key&gt; &lt;string&gt;ATI&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Key&lt;/key&gt; &lt;string&gt;device-id&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;data&gt; //8AAA== &lt;/data&gt; &lt;/dict&gt; &lt;/array&gt; &lt;key&gt;Audio&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Inject&lt;/key&gt; &lt;integer&gt;0&lt;/integer&gt; &lt;/dict&gt; &lt;key&gt;FakeID&lt;/key&gt; &lt;dict&gt; &lt;key&gt;IntelGFX&lt;/key&gt; &lt;string&gt;0x04128086&lt;/string&gt; &lt;/dict&gt; &lt;key&gt;USB&lt;/key&gt; &lt;dict&gt; &lt;key&gt;AddClockID&lt;/key&gt; &lt;true/&gt; &lt;key&gt;FixOwnership&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Inject&lt;/key&gt; &lt;true/&gt; &lt;/dict&gt; &lt;key&gt;UseIntelHDMI&lt;/key&gt; &lt;false/&gt; &lt;/dict&gt; &lt;key&gt;DisableDrivers&lt;/key&gt; &lt;array&gt; &lt;string&gt;VBoxHfs&lt;/string&gt; &lt;/array&gt; &lt;key&gt;GUI&lt;/key&gt; &lt;dict&gt; &lt;key&gt;#ScreenResolution&lt;/key&gt; &lt;string&gt;1920x1080&lt;/string&gt; &lt;key&gt;Custom&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Entries&lt;/key&gt; &lt;array&gt; &lt;dict&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Hidden&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Ignore&lt;/key&gt; &lt;false/&gt; &lt;key&gt;NoCaches&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Type&lt;/key&gt; &lt;string&gt;OSXRecovery&lt;/string&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Ignore&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Title&lt;/key&gt; &lt;string&gt;Windows&lt;/string&gt; &lt;key&gt;Type&lt;/key&gt; &lt;string&gt;Windows&lt;/string&gt; &lt;/dict&gt; &lt;/array&gt; &lt;/dict&gt; &lt;key&gt;Hide&lt;/key&gt; &lt;array&gt; &lt;string&gt;Preboot&lt;/string&gt; &lt;/array&gt; &lt;key&gt;Mouse&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Enabled&lt;/key&gt; &lt;false/&gt; &lt;/dict&gt; &lt;key&gt;Scan&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Entries&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Legacy&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Linux&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Tool&lt;/key&gt; &lt;true/&gt; &lt;/dict&gt; &lt;key&gt;Theme&lt;/key&gt; &lt;string&gt;BGM&lt;/string&gt; &lt;/dict&gt; &lt;key&gt;Graphics&lt;/key&gt; &lt;dict&gt; &lt;key&gt;EDID&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Inject&lt;/key&gt; &lt;false/&gt; &lt;/dict&gt; &lt;key&gt;Inject&lt;/key&gt; &lt;dict&gt; &lt;key&gt;ATI&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Intel&lt;/key&gt; &lt;true/&gt; &lt;key&gt;NVidia&lt;/key&gt; &lt;true/&gt; &lt;/dict&gt; &lt;key&gt;ig-platform-id&lt;/key&gt; &lt;string&gt;0x0d260007&lt;/string&gt; &lt;/dict&gt; &lt;key&gt;KernelAndKextPatches&lt;/key&gt; &lt;dict&gt; &lt;key&gt;AppleRTC&lt;/key&gt; &lt;true/&gt; &lt;key&gt;DellSMBIOSPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;ForceKextsToLoad&lt;/key&gt; &lt;array&gt; &lt;string&gt;\System\Library\Extensions\IONetworkingFamily.kext&lt;/string&gt; &lt;/array&gt; &lt;key&gt;KernelLapic&lt;/key&gt; &lt;true/&gt; &lt;key&gt;KernelPm&lt;/key&gt; &lt;true/&gt; &lt;key&gt;KernelToPatch&lt;/key&gt; &lt;array&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;MSR 0xE2 _xcpm_idle instant reboot(c) Pike R. Alpha&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; ILniAAAADzA= &lt;/data&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; ILniAAAAkJA= &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Disable panic kext logging on 10.13 Debug kernel&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; sABMi1Xw &lt;/data&gt; &lt;key&gt;MatchOS&lt;/key&gt; &lt;string&gt;10.13&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; SIPEQF3D &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Disable panic kext logging on 10.13 Release kernel&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; igKEwHRE &lt;/data&gt; &lt;key&gt;MatchOS&lt;/key&gt; &lt;string&gt;10.13&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; igKEwOtE &lt;/data&gt; &lt;/dict&gt; &lt;/array&gt; &lt;key&gt;KextsToPatch&lt;/key&gt; &lt;array&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Enable 9MB cursor bytes, 0x0a260006&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; BgAmCgEDAwMAAAACAAAwAQAAYAA= &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; BgAmCgEDAwMAAAACAAAwAQAAkAA= &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Enable 96MB DVMT-prealloc, 0x0a2e0008&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; CAAuCgEDAwMAAAAE &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; CAAuCgEDAwMAAAAG &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Enable 128MB DVMT-prealloc, 0x0a2e0008&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; CAAuCgEDAwMAAAAE &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; CAAuCgEDAwMAAAAI &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Enable 128MB DVMT-prealloc, 48MB framebuffer, 48MB cursor bytes, 0x0a260006&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; BgAmCgEDAwMAAAACAAAwAQAAYAA= &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; BgAmCgEDAwMAAAAIAAAAAwAAAAM= &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0105, 0x0a260005 0x0a260006, 0x0d220003, 0x0a2e000a, 0x0a26000a&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AQUJAAAEAACHAAAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AQUJAAAIAACHAAAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0204, 0x0d220003, 0x0a2e000a, 0x0a26000a&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AgQKAAAEAACHAAAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AgQKAAAIAACHAAAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0204, 0x0a260005 0x0a260006&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AgQJAAAEAACHAAAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AgQJAAAIAACHAAAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0105, 0x0a2e0008, 0x0a16000c, 0x0a2e000d, 0x0a26000d&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AQUJAAAEAAAHAQAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AQUJAAAIAAAHAQAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0204, 0x0a2e0008, 0x0a16000c, 0x0a2e000d, 0x0a26000d&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AgQJAAAEAAAHAQAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AgQJAAAIAAAHAQAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0204, alternate/later versions macOS, 0x0a2e0008, 0x0a16000c, 0x0a2e000d, 0x0a26000d&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AgQKAAAEAAAHAQAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AgQKAAAIAAAHAQAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0204, 0x0a2e0008, 0x0a16000c, 0x0a2e000d, 0x0a26000d&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AgQKAAAEAAAHAQAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;MatchOS&lt;/key&gt; &lt;string&gt;10.12.x&lt;/string&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AgQKAAAIAAAHAQAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Enable internal display after sleep for 0x0a2e0008 on 10.10.2-10.12.x (c) syscl&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AQAAAEAAAAAeAAAABQUJAQ== &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;MatchOS&lt;/key&gt; &lt;string&gt;10.10.x,10.11.x,10.12.x&lt;/string&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AQAAAEAAAAAPAAAABQUJAQ== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Enable internal display after sleep for 0x0a2e0008 on 10.13.x (c) syscl&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AQAAAEAAAAAeAgAABQUJAQ== &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;MatchOS&lt;/key&gt; &lt;string&gt;10.13.x&lt;/string&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AQAAAEAAAAAfAgAABQUJAQ== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;Enable internal display after sleep for 0x0a2e000a, 0x0a26000a&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AQAAAEAAAADWAAAABQUAAA== &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AQAAAEAAAAAeAAAABQUAAA== &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0105(12), 0x0a260005 0x0a260006, 0x0d220003, 0x0a2e000a, 0x0a26000a&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AQUJAAAEAACHAAAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AQUSAAAIAACHAAAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0204(12), 0x0d220003, 0x0a2e000a, 0x0a26000a&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AgQKAAAEAACHAAAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AgQSAAAIAACHAAAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0204(12), 0x0a260005 0x0a260006&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AgQJAAAEAACHAAAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AgQSAAAIAACHAAAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0105(12), 0x0a2e0008, 0x0a16000c, 0x0a2e000d, 0x0a26000d&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AQUJAAAEAAAHAQAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AQUSAAAIAAAHAQAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0204(12), 0x0a2e0008, 0x0a16000c, 0x0a2e000d, 0x0a26000d&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AgQJAAAEAAAHAQAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AgQSAAAIAAAHAQAA &lt;/data&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Comment&lt;/key&gt; &lt;string&gt;HDMI-audio, port 0204(12), 0x0a2e0008, 0x0a16000c, 0x0a2e000d, 0x0a26000d&lt;/string&gt; &lt;key&gt;Disabled&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Find&lt;/key&gt; &lt;data&gt; AgQKAAAEAAAHAQAA &lt;/data&gt; &lt;key&gt;InfoPlistPatch&lt;/key&gt; &lt;false/&gt; &lt;key&gt;MatchOS&lt;/key&gt; &lt;string&gt;10.12.x&lt;/string&gt; &lt;key&gt;Name&lt;/key&gt; &lt;string&gt;com.apple.driver.AppleIntelFramebufferAzul&lt;/string&gt; &lt;key&gt;Replace&lt;/key&gt; &lt;data&gt; AgQSAAAIAAAHAQAA &lt;/data&gt; &lt;/dict&gt; &lt;/array&gt; &lt;/dict&gt; &lt;key&gt;RtVariables&lt;/key&gt; &lt;dict&gt; &lt;key&gt;BooterConfig&lt;/key&gt; &lt;string&gt;0x28&lt;/string&gt; &lt;key&gt;CsrActiveConfig&lt;/key&gt; &lt;string&gt;0x67&lt;/string&gt; &lt;/dict&gt; &lt;key&gt;SMBIOS&lt;/key&gt; &lt;dict&gt; &lt;key&gt;#ProductName-MacBookAir&lt;/key&gt; &lt;string&gt;MacBookAir6,2&lt;/string&gt; &lt;key&gt;ProductName&lt;/key&gt; &lt;string&gt;MacBookPro11,1&lt;/string&gt; &lt;key&gt;Trust&lt;/key&gt; &lt;true/&gt; &lt;/dict&gt; &lt;key&gt;SystemParameters&lt;/key&gt; &lt;dict&gt; &lt;key&gt;InjectKexts&lt;/key&gt; &lt;string&gt;Detect&lt;/string&gt; &lt;/dict&gt; &lt;/dict&gt; &lt;/plist&gt; PS：驱动HDMI修改ig-platform-id为0x0d260007既可 目前存在问题 wifi无法使用，淘宝黑苹果网卡解决 Airdrop也无法使用（of course） 偶尔会死机 电池图标永久显示充电中，待解决 小太阳暂时没有测试，待解决 待续……..]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>黑苹果</tag>
        <tag>雷神</tag>
        <tag>MACOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客添加https解析]]></title>
    <url>%2F2018%2F09%2F03%2Fhexo-https%2F</url>
    <content type="text"><![CDATA[简 介 前段时间成功把hexo部署到了腾讯云服务器上，但是现在大多网站都采用了https协议访问，就空余时间申请了个免费证书上传到服务器并开启了https所需准备： 腾讯云主机+hexo ssl证书（可免费申请） winscp 申请SSL证书腾讯云可以免费申请一年的ssl证书，地址如下审核只花了我几个小时，收到短信后打开腾讯云后台，下载证书压缩包解压以后，用winscp上传到服务器/etc/ngix/cert目录下如果没有cert目录可自行手动创建mkdir cert Ngix配置打开你自己的网站配置文件，以我自己为例/etc/ngix/sites-aviliable/default添加如下配置： 1234567891011121314151617server &#123; listen 443; //开启443https默认端口 server_name tediorelee.cn; //指定域名 ssl on; root /var/www/hexo; //指定网站路径 index index.html index.htm; ssl_certificate cert/1_xxxx.crt; //指定上传的证书文件名 ssl_certificate_key cert/2_xxxx.key; //指定上传的证书秘钥名 ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; location / &#123; root /var/www/hexo; index index.html index.htm; &#125;&#125; 保存退出命令行输入ngix -t检查配置文件正确性无错误后，/etc/init.d/ngix restart重启ngix服务访问域名，前缀加上https即可 注：我自己配置的时候，看了很多教程，发现ssl_certificate语句后面不需要接绝对路径，相对路径即可，使用了绝对路径反而检查会报错。 Https优化添加完证书后，你会发现访问原先的http也会进到博客，我们可以继续配置ngix参数使其自动跳转到https打开/etc/ngix/sites-avilable/default删掉以前配置的80端口的配置 1234server &#123; listen 80 default_server; return 301 https://yourdomin.cn$request_uri; //改为自己的域名&#125; 重启ngix服务/etc/init.d/restart现在就可以默认跳转https了！]]></content>
      <categories>
        <category>Hexo博客折腾</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客</tag>
        <tag>ssl证书</tag>
        <tag>https</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[杂物贴图集]]></title>
    <url>%2F2018%2F08%2F30%2Fall-stuff%2F</url>
    <content type="text"><![CDATA[置 顶 日常生活记录，不定期更新(〃’▽’〃)！！！图片警告！！！ 10.24csgo万圣节怎么更新成这个样子了。。。。我熟悉的A包点没了 10.20King Tyrion!!!! 10.1CSGO!!!!完美世界高校杯！！！我们学校我室友！！冠军！！！ 8.30开学了，乖乖滚回学校大四了。。。。 未完待续…………………………………………..(〃’▽’〃)😁]]></content>
      <categories>
        <category>杂物</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯云使用ASF云挂卡]]></title>
    <url>%2F2018%2F08%2F11%2Fsteam-asf%2F</url>
    <content type="text"><![CDATA[简 介 趁着腾讯云搞学生优惠买了云服务器除了存博客之外，突然想到以前steam用asf挂卡的时候能不能用云服务器来实现云端挂卡呢？ 科普： steam等级只能通过合成徽章来获得经验升级 每合成一个徽章可以得到100经验值 级别越高，升一级需要的经验值对应也越高 ASF（全称ArchiSteamFarm） 是一款由 C# 编写的挂卡工具，能同时挂载多个 Steam 账号，现在在 Linux 服务器中配置 ASF 云挂卡。它不像 Idle Master 那样，同一时间只能为一个账号挂卡，需要后台运行 Steam 客户端，需启动额外进程模拟正在游戏状态。ASF 不需要后台运行任何 Steam 客户端，不需要启动额外进程，而且能为不限数目的 Steam 账号同时挂卡。不仅如此，该软件还能在服务器和其他非桌面电脑上运行，并拥有完整支持 Mono 的特性，这能让其在 Linux、Windows 和 OS X 等平台支持 Mono 的操作系统上运行。ASF 存在的基础要归功于 SteamKit2。 下载ASCF修改服务器的host，因为现在steam服务器处于被墙的状态，所以一般是打不开的我们可以使用AnotherSteamCommunityFix这个工具来达到不修改hosts使得服务器可以访问steam社区的功能github链接AnotherSteamCommunityFix下载后，用winscp工具上传到服务器任意位置，unzip解压缩后得到ascf文件修改ascf文件的权限，使得其可以运行chmod +x ./ascf注：因为涉及到修改系统文件hosts等，所以务必使用root权限 下载ASFgithub项目地址ArchiSteamFarm找到最新版本的压缩包，下载后同样使用winscp上传到服务器任意位置unzip解压后，打开web网页配置页面WebConfigGenerator点击机器人，新建一个bot，名字随便写，login那里填写你的steam账户名，passwd填写你的密码，选中enable的√，点击下载，得到一个json文件把下载得到的json文件用winscp上传到asf路径下的config文件夹 启动挂卡这里要用到linux的screen命令，先启动ascf社区访问程序，命令窗口中输入nohup sudo ./ascf &amp;这样ascf程序就默认在后台一直运行，就算ctrl+c结束程序也不会影响了新建一个screen -S ASF进入到 ASF 所在目录cd /ASF #添加可执行文件 ArchiSteamFarm 权限：chmod +x ArchiSteamFarm.sh执行程序：./ArchiSteamFarm.sh当前页面按 ctrl +a +d进入后台恢复 screen 请终端输入：screen -r ASF 最后，打开你的steam，是不是看到你的状态是正在玩游戏了！asf挂卡速度可观，而且你要玩游戏直接挤掉就行了，不玩了他会自动连上继续帮你挂卡！帮朋友挂他说一晚上起来挂了40来张LOL]]></content>
      <categories>
        <category>Steam相关</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>steam</tag>
        <tag>ASF</tag>
        <tag>挂卡</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hadoop-Hbase-Spark大数据平台搭建]]></title>
    <url>%2F2018%2F06%2F22%2Fhadoop-hbase-spark%2F</url>
    <content type="text"><![CDATA[简 介 随着这学期对于hbase和spark的学习，加上上学期学习的hadoop知识，这次专周在这一年学习的基础上，使用虚拟机或者实机&gt;搭建一个完全分布式大数据平台，涉及hadoop平台、hbase平台还有spark平台，使用一台虚拟机充当主节点master，两台虚拟机&gt;充当子节点slave、slave1。准备： 参考前文hadoop伪分布式搭建 hbase和spark安装包 三个虚拟机，一个充当master节点，两个slave节点 安装hadoop配置环境变量在/etc/profile中加上hadoop的环境变量，保存并退出，source /etc/profile生效 修改配置文件hadoop-2.6.4/etc/hadoop配置完以后用scp命令发给各个slave节点 1Core-site.xml 1Hdfs-site.xml 1Yarn-site.xml 1Hadoop-env.sh 1Slaves 1Master 1Mapred-site.xml 测试启动首先初始化namenode节点，使用命令hadoop namenode -format,然后使用start-all.sh启动hadoop，启动完毕以后，jps查看节点，如图，启动成功 安装hbase环境变量配置使用root用户进入/etc/profile中添加hbase的环境变量，保存并退出，然后source /etc/profile使其环境变量生效，如下图所示 修改配置文件1Hbase-env.sh 指定了hbase的环境变量。 1Hbase-site.xml 1Regionservers 安装zookeeper环境变量配置使用root用户修改/etc/profile文件，添加zookeeper环境变量并保存退出，source /etc/profile使其生效，如图所示： 修改配置文件将zookeeper-3.4.3/conf目录下的zoo_sample.cfg文件拷贝一份，命名为为“zoo.cfg”指定datadir目录，在文件末尾添加上master和slave的ip并指定端口号,如图所示：、在datadir目录下创建myid文件，在master主机里写上0，slave里写上1，依次增加。 安装spark环境变量配置使用root用户修改/etc/profile文件，添加zookeeper环境变量并保存退出，source /etc/profile使其生效，如图所示： 修改配置文件Cp一份spark-env.sh，打开并在里面添加配置信息， Cp一份slaves文件，在其中添加master和slave的主机名， 将所有修改过的配置文件scp到slave节点上，至此环境搭建完毕。 测试与总结启动zookeeper分别在master和slave上的zookeeper安装目录下执行./bin/zkServer.sh start启动zookeeperJps查看启动情况如图： 启动hadoop在master上执行start-all.sh，启动hadoop集群，jps查看启动情况：Master节点：Slave节点： 启动hbase在master上执行start-hbase.sh，jps查看启动情况：Master节点：Slave节点： Web页面查看hadoop两个slave节点启动成功： hbaseRegionserver中可以看到有两个slave子节点 spark可以看到两个子节点（worker）]]></content>
      <categories>
        <category>大数据学习</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
        <tag>hbase</tag>
        <tag>spark</tag>
        <tag>虚拟机</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hadoop+ubuntu伪分布式搭建]]></title>
    <url>%2F2018%2F05%2F30%2Fhadoop-ubuntu%2F</url>
    <content type="text"><![CDATA[简 介 大数据学习离不开hadoop集成环境，正好老师上课也给我们了搭建伪分布式hadoop环境的任务，正好可以一起完成所需准备： jdk1.8的安装包 hadoop2.6.4的安装包 安装了ubuntu server14.04的虚拟机一个 远程ssh工具等 winscp工具用于上传需要用到的文件 前期准备ubuntu server需要安装好ssh客户端，在/etc/ssh/sshd_config里修改permissionrootlogin参数为yes这样就可以使用root账户直接登录了将准备好的jdk和hadoop安装包使用winscp上传到ubuntu里 安装JDK解压缩jdk安装包，使用命令tar -zxvf jdk1.8.0_121.tar.gz我解压到的是/home/hadoop/jdk1.8.0_121路径此处图片添加jdk环境变量打开文件vim /etc/profile在末尾加上12export JAVA_HOME="/home/hadoop/jdk1.8.0_121"export PATH=$JAVA_HOME/bin:$PATH 保存并退出，source /etc/profile使其生效这时输入java -version即可查看到版本信息表示jdk安装成功 安装hadoop解压缩hadooptar -zxvf hadoop-2.6.4.tar.gz创建存放hadoop文件的目录sudo mkdir /opt/modules将hadoop文件夹的所有者指定为hadoop用户sudo chown -R hadoop:hadoop /opt/modules配置Hadoop环境变量vim /etc/profile末尾加上12export HADOOP_HOME="/home/hadoop/hadoop.2.6.4"export PATH=$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH 保存并退出，source /etc/profile使其生效配置 hadoop-env.sh、mapred-env.sh、yarn-env.sh文件的JAVA_HOME参数编辑123vim $&#123;HADOOP_HOME&#125;/etc/hadoop/hadoop-env.shvim $&#123;HADOOP_HOME&#125;/etc/hadoop/mapred-env.shvim $&#123;HADOOP_HOME&#125;/etc/hadoop/yarn-env.sh 创建临时目录： 1sudo mkdir -p /opt/data/tmp 将临时目录的所有者修改为hadoop 1sudo chown –R hadoop:hadoop /opt/data/tmp 注：默认的hadoop.tmp.dir是/tmp/hadoop-${user.name},此时有个问题就是NameNode会将HDFS的元数据存储在这个/tmp目录下，如果操作系统重启了，系统会清空/tmp目录下的东西，导致NameNode元数据丢失，是个非常严重的问题，所有我们应该修改这个路径。 配置 core-site.xml12345678910&lt;configuration&gt;&lt;property&gt;&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;&lt;value&gt;/opt/data/tmp&lt;/value&gt;?????????&lt;/property&gt;&lt;property&gt;&lt;name&gt;fs.defaultFS&lt;/name&gt;????????????&lt;value&gt;hdfs://hadoopm:9000&lt;/value&gt;&lt;/property&gt;&lt;/configuration&gt; 配置、格式化、启动HDFS 1vim $&#123;HADOOP_HOME&#125;/etc/hadoop/hdfs-site.xml 添加片段 1234&lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;1&lt;/value&gt;&lt;/property&gt; dfs.replication配置是HDFS存储时的备份数量，伪分布式环境只有一个节点，所以这里设置为1。格式化HDFS 1hdfs namenode –format 格式化后，查看core-site.xml里hadoop.tmp.dir（本例是/opt/data目录）指定的目录下是否有了dfs目录，如果有，说明格式化成功。 启动NameNode 1/sbin/hadoop-daemon.sh start namenode 启动DataNode 1/sbin/hadoop-daemon.sh start datanode 启动SecondaryNameNode 1sbin/hadoop-daemon.sh start secondarynamenode JPS命令查看是否已经启动成功，有结果就是启动成功了 配置、启动YARN 默认没有mapred-site.xml文件，但是有个mapred-site.xml.template配置模板文件。复制模板生成mapred-site.xml 1cp etc/hadoop/mapred-site.xml.template etc/hadoop/mapred-site.xml 添加配置如下： 1234&lt;property&gt;&lt;name&gt;mapreduce.framework.name&lt;/name&gt;&lt;value&gt;yarn&lt;/value&gt;&lt;/property&gt; 配置yarn-site.xml 123456789&lt;property&gt;&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;&lt;value&gt;mapreduce_shuffle&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;&lt;value&gt;bigdata-senior01.chybinmy.com&lt;/value&gt; &lt;/property&gt; 启动Resourcemanager 1sbin/yarn-daemon.sh start resourcemanager 启动nodemanager 1sbin/yarn-daemon.sh start nodemanager 可以看到ResourceManager、NodeManager已经启动成功了。]]></content>
      <categories>
        <category>大数据学习</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
        <tag>hexo</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客部署到腾讯云主机]]></title>
    <url>%2F2018%2F05%2F22%2Fhexo-tencentserver%2F</url>
    <content type="text"><![CDATA[简 介 前段时间将hexo博客部署到了gitpages上，毕竟免费，新手用来练练手后来成功以后发现了几个问题，github访问有时候很慢，不如国内的服务器稳定手机端打开更是慢如蜗牛，所以用学生优惠在腾讯云买了云主机和域名，想来部署在服务器上肯定会好很多吧所需准备： 腾讯云主机 本地搭建好的hxeo博客 域名 创建远程仓库先在服务器上安装git和nginx服务，百度即可。\ 12apt-get install gitapt-get install nginx 创建一个/var/www/hexo目录，用于ngix托管 1sudo mkdir -p /var/www/hexo 创建一个仓库目录，修改目录权限和所有权 1sudo chown -R \$USER:\$USER /var/www/hexo 1sudo chmod -R 755 /var/www/hexo 然后修改 Nginx 的default的设置 1sudo vim /etc/nginx/sites-available/default 将 root 指向/var/www/blog目录 12345678910111213server &#123;listen 80 default_server;listen [::]:80 default_server ipv6only=on;server_name xx.xx.xx \#如果你有域名此处改为你的域名 若没有直接删除这行root /var/www/hexo;index index.html index.htm; &#125; 注：找教程的过程中，看到有些写的是修改etc下的一个配置文件，好像还要自行创建，不知对错没有尝试 保存退出并重启ngix服务 1sudo /etc/init.d/nginx restart 创建git仓库目录创建一个名为blog的git仓库123mkdir /var/repocd /var/repogit init --bare hexoBlog.git 创建git hook在hexoBlog下创建一个hook，可以将静态html文件推送到服务器的路径（/var/www/blog）里 在自动生成的 hooks 目录下创建一个新钩子脚本文件： sudo vim /var/repo/hexoBlog.git/hooks/post-receive 在该文件中添加下面代码，指定 Git 的工作树(源代码)和 Git 目录(配置文件等) 123#!/bin/bashgit --work-tree=/var/www/hexo --git-dir=/var/repo/hexoBlog.git checkout -f 保存退出，给该文件加权限使其变成可执行文件 1chmod +x /var/repo/hexoBlog.git/hooks/post-receive SSH 配置在服务器和本地都生成密钥1ssh-keygen -t rsa -C "example@gmail.com" 一路回车确定，生成完毕之后，打开服务器ssh目录下的authorized_keys文件，添加本地的id_rsa.pub文件中的信息进去 Git 部署配置git同步的用户名和邮箱12$ git config --global user.name "xxxx"$ git config --global user.email "xxx@example.com" 编辑本地 blog 文件中的站点配置文件_config.yml1234567deploy:type: gitrepo: 服务器用户名\@服务器的公网 IP 地址:/var/repo/hexoBlogbranch: master 保存退出。 安装好后可以测试部署 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 注：我自己没有设置ssh免密登录，所以部署的时候会提示输入服务器登录密码，还有config.yml文件里的服务器用户名用root，用普通用户的话会提示报错，因为权限不足，我的云主机默认是无法直接root登录的，所以修改/etc/ssh/下的配置文件里的permissionrootlogin字段为yes即可直接用root登录 绑定域名登录腾讯云后台管理，实名认证后即可使用，（暂时未备案） 点击添加解析 按提示添加解析之后，手动新建一个解析，记录类型选为CNAME，记录值填写你的域名 保存即可 返回本地hexo路径，在sources下新建一个CNAME文件，编辑器打开里面填上你的域名xxxx.cn保存退出即可 重新部署一遍即可生效 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d]]></content>
      <categories>
        <category>Hexo博客折腾</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客</tag>
        <tag>腾讯云</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小米路由器+pandavan固件破解移动校园网锐捷认证]]></title>
    <url>%2F2018%2F05%2F09%2Fmirouter-pandavan%2F</url>
    <content type="text"><![CDATA[简 介 学校的移动网太不人性化了，几十块一个月还只能用网线连电脑拨号不能使用路由器，手机只能开热点回想起高三买的小米路由器还在家里吃灰立刻打电话给母上叫她给我把路由器寄过来，ps：小米路由器刷机还是挺舒服这次准备用恩山论坛的pandavan固件刷机，使路由器可以模拟锐捷认证达到使用wifi的目的所需准备： 小米路由器x1 网线 breed和pandavan固件 前期准备初始化小米路由器，由于我第一次刷入固件失败，后面重新找了好久的老版本小米固件刷进去才支持刷机，听说现在新的固件都不能这样玩了LOLBreed是什么?breed被称作“不死”，意思所有的操作都在breed里面完成 “Bootloader 意思为引导加载器，即为用于加载操作系统的程序。它是一大类此类功能程序的统称。现在的 BIOS、UEFI、GRUB、RedBoot、U-Boot、CFE、Breed 等都是 Bootloader。” Breed 拥有以下新特性：实时刷机进度，进度条能准确反映刷机进度Web 页面快速响应最大固件备份速度，依 Flash 而定，一般能达到 1MB/s免按复位键进入 Web 刷机模式Telnet 功能，免 TTL 进入 Breed 命令控制台复位键定义测试功能固件启动失败自动进入 Web 刷机模式可自定义位置和大小的环境变量块找到适合自己路由器的breed固件，地址如下http://breed.hackpascal.net/ Pandavan固件下载地址http://opt.cn2qq.com/padavan/、 刷机先刷入breed不死固件电脑网络连接设置为自动获取 IP 地址打开 CMD，运行 ping 192.168.1.1 -t按住复位键或者WPS键再给路由通电，如果看到路由器的部分或全部LED连闪4次，或 ping 通即表明进入 Web 刷机模式注：我的小米路由器自带了usb接口，故我拷贝固件包到U盘插上就可以直接刷成功后如图： 点击breed里面的固件更新，选择已经下载好的适合自己路由器的pandavan固件，点击确定等待刷机完成即可 之后，插上网线连接电脑浏览器输入192.168.123.1即可进入路由器管理界面默认id和密码为admin 模拟锐捷认证点击扩展功能，找到锐捷认证窗口用户名输入你的学号（具体看运营商分配）密码为宽带的密码ip请手动输入锐捷客户端连接后的ip网关、dns同理心跳间隔选择2客户端版本选择4.98其他全部默认，点击确定稍等片刻，你就可以用路由器上网了！破解成功 pandavan其他玩法pandavan固件的功能和玩法多种多样，模拟锐捷只是其中一个而已作为经常有翻墙需要的我，自然是可以用它自带的ss功能实现路由器翻墙上网了前提自己要有ssr账号LOL 由于我的小米路由器还有个USB接口，接上了一块硬盘以后再加上pandavan固件的功能，在寝室局域网的环境内就能实现手机平板访问、下载文件了！再也不用慢慢拷片到手机上了！]]></content>
      <categories>
        <category>路由器破解</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>小米路由器</tag>
        <tag>锐捷认证</tag>
        <tag>校园网</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客搭建心得]]></title>
    <url>%2F2018%2F04%2F19%2Fhexo-start%2F</url>
    <content type="text"><![CDATA[简 介偶然一次看到一个学长的博客，做的很好，上面的内容也十分牛逼就想着自己什么时候可以弄一个自己的博客来记录一下自己的生活、学习过程等。今天终于心血来潮的开始了对博客的搭建，第一次使用，采用了hexo框架+gitpages的方式后面有空再进行优化，搞个域名什么的 心 得遇到的坑： 1.md配置文件里面冒号后面必须有空格啊喂！（这是什么沙雕设定2333 2.以前注册的github账号带了大写，不知道这个有没有影响，反正看了各种教程网页说可能有影响然后最后还是重新注册了一个新的账号（心理作用maybe 3.想给博客来点特效结果一下子弄多了，卡的一匹，最后还是只开了一点特效 4.有时候莫名deploy不上去，这次hexo d的东西下次才生效（神 秘 END暂时想到这么多，下次有空再写（逃]]></content>
  </entry>
</search>
